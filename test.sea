use std/io
use a_thing

def u8 = uint8_t

mac cry(): bool = "true"
mac cry_2_electric_boogaloo(exit_code, unused_bozo) = "exit(${exit_code})"

rec User(name: String, age: int, life_getter: fun(): int)

#static
rec Name(first: String, last: String)

tag Suit(SPADE, HEART, DIAMOND, CLUB)

tag rec Action(
	Draw,
	Play(suit: Suit, value: u8),
	Discard()
)

fun get_play_card(suit: Suit, value: u8): Action {
	ret new Action(Play, suit, value)
}

#union
rec FunnyThing(
	as_int: i32,
	as_float: f32,
	as_char: char
)

fun $omething(
	a_really_weirdly_typed_parameter: ^^^fun(int, ^char[]): int,
	not_a_weird_parameter: int
): int[3][3] { }

#inline
fun fake() -> ret new Fake()

#(inline, static)
fun another_fake() -> ret new AnotherFake(0, true, false, {
	ret 1_000_000
})

raw[
	#include <fake_library.h>

	void print_characters(char characters[]) {
		char cur;
		for (int i = 0 ; cur != '\0' ; i++) {
			cur = characters[i];
			printf("%c", cur);
		}
		printf("\n");
	}

	void stress_test() {
		// testing unbalanced brackets in comments: [
		/* [ */
		printf("\[\n");
		printf("%c\n", '[');
		// do some more weird character things to test other checks in the lexer
		"'\"";
		'\''
		'"'
	}
]

fun fetch(it: int): int -> ret it

fun get_life(): int -> ret fetch(42)

fun main(argc: int, argv: ^char[]): int {
	get_play_card(DIAMOND, 2)

	ret 1 + 2 + 3 * 4 as u8
	ret 0x02
	ret 0b11
	ret 4.0

	ret 2 * -get_life() / 2 * -1

	if true { ret 0 } else { ret 0 }

	if 1 == 0 + 1 -> ret 0 else { ret 0 }

	if 1 == 0 + 1 -> ret 0
	else if 0 == 0 * 2 -> ret 0
	else -> ret new Name("Frodo", "Baggins")

	switch bozo {
		case 0 -> ret 0
		case 1 -> ret 1
		case 2 -> ret 2
		fall case 3 -> ret 3
		fall case 4 -> ret 4
		case 5 -> ret 5
		else -> ret 0-1
	}

	// Comment
	/*
	  Multiline
	  Comment
	*/
	/*
		/*
			Nested Multiline comment
		*/
	*/

	// There's quite the handful of for loop styles
	// c-style
	for var i = 0 ; i < 0 ; i = i + 1 { }
	// single-expr
	for true { }
	// for/to
	for 0 to 10 { }
	// for/in/to
	for i in 0 to 10 { }

	raw [ printf("Hello, World!\n"); ]

	@cry_2_electric_boogaloo(12)
}
