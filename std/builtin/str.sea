raw[ #include <string.h> /* memcpy */ ]

/**
 * A generic string type, null-termination is not guaranteed.
 *
 * Fields:
 *  len: int   - Length of the string.
 *  str: ^char - The pointer to the string.
**/
rec String(len: int, str: ^char)

/**
 * Creates a <String> object with the given length and characters. The characters are not copied.
 *
 * Args:
 *  len: int     - Length of the string.
 *  chars: ^char - Pointer to the first character.
**/
fun stringView(len: int, chars: ^char): String {
	ret new String(len, chars)
}

/**
 * Creates a <String> object with the given length and characters. The characters are copied, make sure to free the <String> later.
 *
 * Args:
 *  len: int     - Length of the string.
 *  chars: ^char - Pointer to the first character.
**/
fun copyString(len: int, chars: ^char): String {
	let str: String = new String(len, NULL)
	memcpy(str.str, chars, len)
	ret str
}

fun freeString(string: ^String) {
	free(string^.str)
	free(string)
}
